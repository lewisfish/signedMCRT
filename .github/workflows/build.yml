name: CI

on: [push, pull_request, workflow_dispatch]

env:
  BUILD_DIR: _build
  PIP_PACKAGES: >-
    gcovr

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        gcc_v: [10] # Version of GFortran we want to use.
        include:
        - os: ubuntu-latest
          os-arch: linux-x86_64

        # - os: macos-latest
        #   os-arch: macos-x86_64

    defaults:
      run:
        shell: ${{ matrix.shell || 'bash' }}

    env:
      FC: gfortran
      GCC_V: ${{ matrix.gcc_v }}
      PYTHON_V: 3.8

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install GFortran macOS
      if: contains(matrix.os, 'macos')
      run: |
        brew install gcc@${GCC_V}
        ln -s /usr/local/bin/gfortran-${GCC_V} /usr/local/bin/gfortran
        which gfortran-${GCC_V}
        which gfortran

    - name: Install GCC (Linux)
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y gcc-${{ env.GCC_V}} gfortran-${{ env.GCC_V }}
        sudo update-alternatives \
        --install /usr/bin/gcc gcc /usr/bin/gcc-${{ env.GCC_V }} 100 \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ env.GCC_V }} \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ env.GCC_V }}
   
    - name: Build and compile (GNU)
      run: fpm build

    - name: Test and compile (GNU)
      run: fpm @test

    - name: Run CodeCov
      if: ${{ contains(matrix.os, 'ubuntu') && contains(matrix.os, 'ubuntu') }}
      run: |
        gcov ./build/gfortran_*/sMCRT/src*.gcda -r ./src/ -b
    
    - name: Codecov
      if: ${{ contains(matrix.os, 'ubuntu') && contains(matrix.os, 'ubuntu') }}
      uses: codecov/codecov-action@v3.1.1
